{"ast":null,"code":"var _jsxFileName = \"/home/bhawana-ubuntu/learning-React/my-first-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 5\n}, this), document.getElementById(\"root\"));\n/*\nconst first_name = \"Bhawana\";\nconst last_name = \"Tiwari\";\nconst img1 = \"https://picsum.photos/id/1/200/300\";\nconst img2 = \"https://picsum.photos/id/2/250/300\";\nconst img3 = \"https://picsum.photos/id/3/300/300\";\nconst img4 = \"https://picsum.photos/id/4/350/300\";\nconst link = \"https://www.linkedin.com/in/bhawanatiwari/\" \n\n<h1 className = \"heading\">My name is {first_name} {last_name} !!!</h1>\n    <a href = {link} target = \"_myLinkedInProfile\">\n        <img src = {img1} alt = \"Random Image\"/>\n    </a>\n    <div className=\"img_div\">\n    <img src = {img2} alt = \"Random Image\"/>\n    <img src = {img3} alt = \"Random Image\"/>\n    <img src = {img4} alt = \"Random Image\"/>\n    </div>*/\n// \"OR\" var React = require('react')\n// \"OR\" var ReactDOM = require('react-dom')\n// You can write \"React.Fragment\" or only <> </> also does the same. Avoid writing <div> </div> because it creates\n// an extra div inside root.\n\n/*\n<p>I am great. My lucky number is {3+4}. What is yours?</p>\n<p> \"OR\" you could also do it by using + operator</p> \n    <h1 contentEditable = \"true\">My name is {first_name + \" \" + last_name} !!!</h1>\n    <p> \"OR\" you could also do it by using a back-tick operator</p>\n    <h1> {`My name is ${first_name} ${last_name} !!!`} </h1> */\n// If you have to write Template Literals, then you have to use back-tick. \n// And if we have to use JS inside it then we have to write $ and curly braces.\n// Adding HTML Global Attribute : contenteditable (as contentEditable) i.e in cameCase in h1 tag\n// Adding image. As img tag is a self closing so / is required at the end\n// Created Image Gallery\n// Added anchor tag in one of the image\n// Added ./index.css\n// For writing inline css, you have to create an object like this\n\n/* const heading = {\n    color : \"#ff9191\",\n    textTransform: \"capitalize\"\n};\n*/\n// Whenever we create a components file, the first letter of the name of file has to be capital.\n// eg. Heading.jsx","map":{"version":3,"sources":["/home/bhawana-ubuntu/learning-React/my-first-app/src/index.js"],"names":["React","ReactDOM","App","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEAD,QAAQ,CAACE,MAAT,eACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QADJ,EACaC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADb;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACJ;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from \"./App\";\n\nReactDOM.render( \n    <App />, document.getElementById(\"root\")\n)\n/*\nconst first_name = \"Bhawana\";\nconst last_name = \"Tiwari\";\nconst img1 = \"https://picsum.photos/id/1/200/300\";\nconst img2 = \"https://picsum.photos/id/2/250/300\";\nconst img3 = \"https://picsum.photos/id/3/300/300\";\nconst img4 = \"https://picsum.photos/id/4/350/300\";\nconst link = \"https://www.linkedin.com/in/bhawanatiwari/\" \n\n<h1 className = \"heading\">My name is {first_name} {last_name} !!!</h1>\n    <a href = {link} target = \"_myLinkedInProfile\">\n        <img src = {img1} alt = \"Random Image\"/>\n    </a>\n    <div className=\"img_div\">\n    <img src = {img2} alt = \"Random Image\"/>\n    <img src = {img3} alt = \"Random Image\"/>\n    <img src = {img4} alt = \"Random Image\"/>\n    </div>*/\n    // \"OR\" var React = require('react')\n    // \"OR\" var ReactDOM = require('react-dom')\n    // You can write \"React.Fragment\" or only <> </> also does the same. Avoid writing <div> </div> because it creates\n// an extra div inside root.\n/*\n<p>I am great. My lucky number is {3+4}. What is yours?</p>\n<p> \"OR\" you could also do it by using + operator</p> \n    <h1 contentEditable = \"true\">My name is {first_name + \" \" + last_name} !!!</h1>\n    <p> \"OR\" you could also do it by using a back-tick operator</p>\n    <h1> {`My name is ${first_name} ${last_name} !!!`} </h1> */\n// If you have to write Template Literals, then you have to use back-tick. \n// And if we have to use JS inside it then we have to write $ and curly braces.\n// Adding HTML Global Attribute : contenteditable (as contentEditable) i.e in cameCase in h1 tag\n// Adding image. As img tag is a self closing so / is required at the end\n// Created Image Gallery\n// Added anchor tag in one of the image\n// Added ./index.css\n// For writing inline css, you have to create an object like this\n/* const heading = {\n    color : \"#ff9191\",\n    textTransform: \"capitalize\"\n};\n*/\n// Whenever we create a components file, the first letter of the name of file has to be capital.\n// eg. Heading.jsx"]},"metadata":{},"sourceType":"module"}