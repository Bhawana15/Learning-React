{"ast":null,"code":"var _jsxFileName = \"/home/bhawana-ubuntu/learning-React/my-first-app/src/index.js\";\n// var React = require('react') \"OR\"\nimport React from 'react'; // var ReactDOM = require('react-dom') \"OR\"\n\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst first_name = \"Bhawana\";\nconst last_name = \"Tiwari\";\nconst img1 = \"https://picsum.photos/id/1/200/300\";\nconst img2 = \"https://picsum.photos/id/1/250/300\";\nconst img3 = \"https://picsum.photos/id/1/300/300\";\nconst img4 = \"https://picsum.photos/id/1/350/300\"; // You can write \"React.Fragment\" or only <> </> also does the same. Avoid writing <div> </div> because it creates\n// an extra div inside root.\n// If you have to write Template Literals, then you have to use back-tick. \n// And if we have to use JS inside it then we have to write $ and curly braces.\n// Adding HTML Global Attribute : contenteditable (as contentEditable) i.e in cameCase in h1 tag\n// Adding image. As img tag is a self closing so / is required at the end\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    contentEditable: \"true\",\n    children: [\"My name is \", first_name, \" \", last_name, \" !!!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" \\\"OR\\\" you could also do it by using + operator\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"My name is \", first_name + \" \" + last_name, \" !!!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" \\\"OR\\\" you could also do it by using a back-tick operator\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\" \", `My name is ${first_name} ${last_name} !!!`, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"I am great. My lucky number is \", 3 + 4, \". What is yours?\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n    src: img1,\n    alt: \"Random Image\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n    src: img2,\n    alt: \"Random Image\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n    src: img3,\n    alt: \"Random Image\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n    src: img4,\n    alt: \"Random Image\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 5\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/bhawana-ubuntu/learning-React/my-first-app/src/index.js"],"names":["React","ReactDOM","first_name","last_name","img1","img2","img3","img4","render","document","getElementById"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,UAAU,GAAG,SAAnB;AACA,MAAMC,SAAS,GAAG,QAAlB;AACA,MAAMC,IAAI,GAAG,oCAAb;AACA,MAAMC,IAAI,GAAG,oCAAb;AACA,MAAMC,IAAI,GAAG,oCAAb;AACA,MAAMC,IAAI,GAAG,oCAAb,C,CAEA;AACA;AAEA;AACA;AACA;AACA;;AACAN,QAAQ,CAACO,MAAT,eACI,QAAC,KAAD,CAAO,QAAP;AAAA,0BAEA;AAAI,IAAA,eAAe,EAAG,MAAtB;AAAA,8BAAyCN,UAAzC,OAAsDC,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHA,eAIA;AAAA,8BAAgBD,UAAU,GAAG,GAAb,GAAmBC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,UAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALA,eAMA;AAAA,oBAAO,cAAaD,UAAW,IAAGC,SAAU,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,UANA,eAOA;AAAA,kDAAmC,IAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA,UAPA,eASA;AAAK,IAAA,GAAG,EAAIC,IAAZ;AAAkB,IAAA,GAAG,EAAG;AAAxB;AAAA;AAAA;AAAA;AAAA,UATA,eAUA;AAAK,IAAA,GAAG,EAAIC,IAAZ;AAAkB,IAAA,GAAG,EAAG;AAAxB;AAAA;AAAA;AAAA;AAAA,UAVA,eAWA;AAAK,IAAA,GAAG,EAAIC,IAAZ;AAAkB,IAAA,GAAG,EAAG;AAAxB;AAAA;AAAA;AAAA;AAAA,UAXA,eAYA;AAAK,IAAA,GAAG,EAAIC,IAAZ;AAAkB,IAAA,GAAG,EAAG;AAAxB;AAAA;AAAA;AAAA;AAAA,UAZA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAgBIE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAhBJ","sourcesContent":["// var React = require('react') \"OR\"\nimport React from 'react'\n// var ReactDOM = require('react-dom') \"OR\"\nimport ReactDOM from 'react-dom'\n\nconst first_name = \"Bhawana\";\nconst last_name = \"Tiwari\";\nconst img1 = \"https://picsum.photos/id/1/200/300\";\nconst img2 = \"https://picsum.photos/id/1/250/300\";\nconst img3 = \"https://picsum.photos/id/1/300/300\";\nconst img4 = \"https://picsum.photos/id/1/350/300\";\n\n// You can write \"React.Fragment\" or only <> </> also does the same. Avoid writing <div> </div> because it creates\n// an extra div inside root.\n\n// If you have to write Template Literals, then you have to use back-tick. \n// And if we have to use JS inside it then we have to write $ and curly braces.\n// Adding HTML Global Attribute : contenteditable (as contentEditable) i.e in cameCase in h1 tag\n// Adding image. As img tag is a self closing so / is required at the end\nReactDOM.render( \n    <React.Fragment> \n\n    <h1 contentEditable = \"true\">My name is {first_name} {last_name} !!!</h1>\n    <p> \"OR\" you could also do it by using + operator</p> \n    <h1>My name is {first_name + \" \" + last_name} !!!</h1>\n    <p> \"OR\" you could also do it by using a back-tick operator</p>\n    <h1> {`My name is ${first_name} ${last_name} !!!`} </h1> \n    <p>I am great. My lucky number is {3+4}. What is yours?</p>\n\n    <img src = {img1} alt = \"Random Image\"/>\n    <img src = {img2} alt = \"Random Image\"/>\n    <img src = {img3} alt = \"Random Image\"/>\n    <img src = {img4} alt = \"Random Image\"/>\n\n    </React.Fragment>, \n    document.getElementById(\"root\"))"]},"metadata":{},"sourceType":"module"}