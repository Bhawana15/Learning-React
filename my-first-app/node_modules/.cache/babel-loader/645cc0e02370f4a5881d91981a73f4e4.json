{"ast":null,"code":"var _jsxFileName = \"/home/bhawana-ubuntu/learning-React/my-first-app/src/index.js\";\n// var React = require('react') \"OR\"\nimport React from 'react'; // var ReactDOM = require('react-dom') \"OR\"\n\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst first_name = \"Bhawana\";\nconst last_name = \"Tiwari\"; // You can write \"React.Fragment\" or only <> </> also does the same. Avoid writing <div> </div> because it creates\n// an extra div inside root.\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"My name is \", first_name, \" \", last_name, \" !!!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" \\\"OR\\\" you could also do it by using + operator\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"My name is \", first_name + \" \" + last_name, \" !!!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" \\\"OR\\\" you could also do it by using a back-tick operator\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"My name is \", `${first_name}``${last_name}`, \" !!!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"I am great. My lucky number is \", 3 + 4, \". What is yours?\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 5\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/bhawana-ubuntu/learning-React/my-first-app/src/index.js"],"names":["React","ReactDOM","first_name","last_name","render","document","getElementById"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,UAAU,GAAG,SAAnB;AACA,MAAMC,SAAS,GAAG,QAAlB,C,CAEA;AACA;;AACAF,QAAQ,CAACG,MAAT,eACI,QAAC,KAAD,CAAO,QAAP;AAAA,0BACA;AAAA,8BAAgBF,UAAhB,OAA6BC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,eAGA;AAAA,8BAAgBD,UAAU,GAAG,GAAb,GAAmBC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,UAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJA,eAKA;AAAA,8BAAiB,GAAED,UAAW,EAAG,GAAEC,SAAU,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,UALA,eAMA;AAAA,kDAAmC,IAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA,UANA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EASIE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CATJ","sourcesContent":["// var React = require('react') \"OR\"\nimport React from 'react'\n// var ReactDOM = require('react-dom') \"OR\"\nimport ReactDOM from 'react-dom'\n\nconst first_name = \"Bhawana\";\nconst last_name = \"Tiwari\"\n\n// You can write \"React.Fragment\" or only <> </> also does the same. Avoid writing <div> </div> because it creates\n// an extra div inside root.\nReactDOM.render( \n    <React.Fragment> \n    <h1>My name is {first_name} {last_name} !!!</h1>\n    <p> \"OR\" you could also do it by using + operator</p> \n    <h1>My name is {first_name + \" \" + last_name} !!!</h1>\n    <p> \"OR\" you could also do it by using a back-tick operator</p>\n    <h1>My name is {`${first_name}` `${last_name}`} !!!</h1> \n    <p>I am great. My lucky number is {3+4}. What is yours?</p>\n    </React.Fragment>, \n    document.getElementById(\"root\"))"]},"metadata":{},"sourceType":"module"}