{"ast":null,"code":"var _jsxFileName = \"/home/bhawana-ubuntu/learning-React/my-first-app/src/index.js\";\n// var React = require('react') \"OR\"\nimport React from 'react'; // var ReactDOM = require('react-dom') \"OR\"\n\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport \"./Heading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst first_name = \"Bhawana\";\nconst last_name = \"Tiwari\";\nconst img1 = \"https://picsum.photos/id/1/200/300\";\nconst img2 = \"https://picsum.photos/id/2/250/300\";\nconst img3 = \"https://picsum.photos/id/3/300/300\";\nconst img4 = \"https://picsum.photos/id/4/350/300\";\nconst link = \"https://www.linkedin.com/in/bhawanatiwari/\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"heading\",\n    children: [\"My name is \", first_name, \" \", last_name, \" !!!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" \\\"OR\\\" you could also do it by using + operator\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n    contentEditable: \"true\",\n    children: [\"My name is \", first_name + \" \" + last_name, \" !!!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" \\\"OR\\\" you could also do it by using a back-tick operator\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\" \", `My name is ${first_name} ${last_name} !!!`, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"I am great. My lucky number is \", 3 + 4, \". What is yours?\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n    href: link,\n    target: \"_myLinkedInProfile\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: img1,\n      alt: \"Random Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"img_div\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: img2,\n      alt: \"Random Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: img3,\n      alt: \"Random Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: img4,\n      alt: \"Random Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 5\n}, this), document.getElementById(\"root\")); // You can write \"React.Fragment\" or only <> </> also does the same. Avoid writing <div> </div> because it creates\n// an extra div inside root.\n// If you have to write Template Literals, then you have to use back-tick. \n// And if we have to use JS inside it then we have to write $ and curly braces.\n// Adding HTML Global Attribute : contenteditable (as contentEditable) i.e in cameCase in h1 tag\n// Adding image. As img tag is a self closing so / is required at the end\n// Created Image Gallery\n// Added anchor tag in one of the image\n// Added ./index.css\n// For writing inline css, you have to create an object like this\n\n/* const heading = {\n    color : \"#ff9191\",\n    textTransform: \"capitalize\"\n};\n*/\n// Whenever we create a components file, the first letter of the name of file has to be capital.\n// eg. Heading.jsx","map":{"version":3,"sources":["/home/bhawana-ubuntu/learning-React/my-first-app/src/index.js"],"names":["React","ReactDOM","first_name","last_name","img1","img2","img3","img4","link","render","document","getElementById"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,WAAP;;AAEA,MAAMC,UAAU,GAAG,SAAnB;AACA,MAAMC,SAAS,GAAG,QAAlB;AACA,MAAMC,IAAI,GAAG,oCAAb;AACA,MAAMC,IAAI,GAAG,oCAAb;AACA,MAAMC,IAAI,GAAG,oCAAb;AACA,MAAMC,IAAI,GAAG,oCAAb;AACA,MAAMC,IAAI,GAAG,4CAAb;AAEAP,QAAQ,CAACQ,MAAT,eACI,QAAC,KAAD,CAAO,QAAP;AAAA,0BACA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADA,eAEA;AAAI,IAAA,SAAS,EAAG,SAAhB;AAAA,8BAAsCP,UAAtC,OAAmDC,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHA,eAIA;AAAI,IAAA,eAAe,EAAG,MAAtB;AAAA,8BAAyCD,UAAU,GAAG,GAAb,GAAmBC,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA,UAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALA,eAMA;AAAA,oBAAO,cAAaD,UAAW,IAAGC,SAAU,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,UANA,eAOA;AAAA,kDAAmC,IAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA,UAPA,eASA;AAAG,IAAA,IAAI,EAAIK,IAAX;AAAiB,IAAA,MAAM,EAAG,oBAA1B;AAAA,2BACI;AAAK,MAAA,GAAG,EAAIJ,IAAZ;AAAkB,MAAA,GAAG,EAAG;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UATA,eAaA;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACA;AAAK,MAAA,GAAG,EAAIC,IAAZ;AAAkB,MAAA,GAAG,EAAG;AAAxB;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,GAAG,EAAIC,IAAZ;AAAkB,MAAA,GAAG,EAAG;AAAxB;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAK,MAAA,GAAG,EAAIC,IAAZ;AAAkB,MAAA,GAAG,EAAG;AAAxB;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UAbA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAqBIG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CArBJ,E,CAuBI;AACJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// var React = require('react') \"OR\"\nimport React from 'react'\n// var ReactDOM = require('react-dom') \"OR\"\nimport ReactDOM from 'react-dom'\nimport \"./index.css\"\nimport \"./Heading\";\n\nconst first_name = \"Bhawana\";\nconst last_name = \"Tiwari\";\nconst img1 = \"https://picsum.photos/id/1/200/300\";\nconst img2 = \"https://picsum.photos/id/2/250/300\";\nconst img3 = \"https://picsum.photos/id/3/300/300\";\nconst img4 = \"https://picsum.photos/id/4/350/300\";\nconst link = \"https://www.linkedin.com/in/bhawanatiwari/\"\n\nReactDOM.render( \n    <React.Fragment> \n    <Heading></Heading>\n    <h1 className = \"heading\">My name is {first_name} {last_name} !!!</h1>\n    <p> \"OR\" you could also do it by using + operator</p> \n    <h1 contentEditable = \"true\">My name is {first_name + \" \" + last_name} !!!</h1>\n    <p> \"OR\" you could also do it by using a back-tick operator</p>\n    <h1> {`My name is ${first_name} ${last_name} !!!`} </h1> \n    <p>I am great. My lucky number is {3+4}. What is yours?</p>\n\n    <a href = {link} target = \"_myLinkedInProfile\">\n        <img src = {img1} alt = \"Random Image\"/>\n    </a>\n\n    <div className=\"img_div\">\n    <img src = {img2} alt = \"Random Image\"/>\n    <img src = {img3} alt = \"Random Image\"/>\n    <img src = {img4} alt = \"Random Image\"/>\n    </div>\n\n    </React.Fragment>, \n    document.getElementById(\"root\"))\n\n    // You can write \"React.Fragment\" or only <> </> also does the same. Avoid writing <div> </div> because it creates\n// an extra div inside root.\n\n// If you have to write Template Literals, then you have to use back-tick. \n// And if we have to use JS inside it then we have to write $ and curly braces.\n// Adding HTML Global Attribute : contenteditable (as contentEditable) i.e in cameCase in h1 tag\n// Adding image. As img tag is a self closing so / is required at the end\n// Created Image Gallery\n// Added anchor tag in one of the image\n// Added ./index.css\n// For writing inline css, you have to create an object like this\n/* const heading = {\n    color : \"#ff9191\",\n    textTransform: \"capitalize\"\n};\n*/\n// Whenever we create a components file, the first letter of the name of file has to be capital.\n// eg. Heading.jsx"]},"metadata":{},"sourceType":"module"}